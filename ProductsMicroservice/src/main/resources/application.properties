spring.application.name=kafka
#setting port num to 0 will let springboot
# start the server on a random port.
# Helpful when we start multiple instances.
server.port=0

##############KAFKA PRODUCER RELATED PROPERTIES###########
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#No. of retries if producer fails to deliver the message.
#Default values is very large (Infinite for practical purposes)
#So, depending on the criticality of the message, its important
#to tweak this property.
spring.kafka.producer.retries=10

#Amount of time producer will wait before the next retry attempt.
spring.kafka.producer.properties.retry.backoff.ms=1000


#Instead of controlling the retry behavior using `spring.kafka.producer.retries`
#and `spring.kafka.producer.properties.retry.backoff`, kafka docs
#recommend controlling it via the following.
#This is max time the producer is allowed in which the 'entire'
#sending of message should complete, including retries if any.
#However, while setting a value for this property, ensure that
#the value must be greater than or equal to the sum of values
#for the next two properties.
spring.kafka.producer.properties.delivery.timeout.ms=50000

#sum of below two should be greater or equal to
#the value for `spring.kafka.producer.properties.delivery.timeout.ms`
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000


#Producer will not wait for ack at all.
#spring.kafka.producer.acks=0

#Producer will wait for an ack from a leader broker only.
#spring.kafka.producer.acks=1

#Producer will wait for ack from all the insync brokers for the topic (not just the leader)
#`min.insync.replicas` is a property that is used to configure minimum insync replicas for a topic.
#If the producer doesn't receive ack from all the insync replicas, the
#message won't be considered delivered and producer will retry until timeout is reached.
spring.kafka.producer.acks=all

#Make the producer idempotent
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
##############KAFKA PRODUCER RELATED PROPERTIES###########